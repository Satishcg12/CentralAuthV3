// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package sqlc

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type AccessToken struct {
	ID        uuid.UUID    `json:"id"`
	Token     string       `json:"token"`
	ClientID  uuid.UUID    `json:"client_id"`
	UserID    uuid.UUID    `json:"user_id"`
	Scope     string       `json:"scope"`
	ExpiresAt time.Time    `json:"expires_at"`
	CreatedAt sql.NullTime `json:"created_at"`
}

type AuthCode struct {
	ID                  uuid.UUID      `json:"id"`
	Code                string         `json:"code"`
	ClientID            uuid.UUID      `json:"client_id"`
	UserID              uuid.UUID      `json:"user_id"`
	RedirectUri         string         `json:"redirect_uri"`
	Scope               string         `json:"scope"`
	CodeChallenge       sql.NullString `json:"code_challenge"`
	CodeChallengeMethod sql.NullString `json:"code_challenge_method"`
	Nonce               sql.NullString `json:"nonce"`
	AuthTime            time.Time      `json:"auth_time"`
	ExpiresAt           time.Time      `json:"expires_at"`
	CreatedAt           sql.NullTime   `json:"created_at"`
}

type Client struct {
	ID                      uuid.UUID      `json:"id"`
	ClientID                string         `json:"client_id"`
	ClientSecret            string         `json:"client_secret"`
	Name                    string         `json:"name"`
	Description             sql.NullString `json:"description"`
	RedirectUris            []string       `json:"redirect_uris"`
	AllowedCorsOrigins      []string       `json:"allowed_cors_origins"`
	PostLogoutRedirectUris  []string       `json:"post_logout_redirect_uris"`
	TokenEndpointAuthMethod sql.NullString `json:"token_endpoint_auth_method"`
	GrantTypes              []string       `json:"grant_types"`
	ResponseTypes           []string       `json:"response_types"`
	ClientUri               sql.NullString `json:"client_uri"`
	LogoUri                 sql.NullString `json:"logo_uri"`
	TosUri                  sql.NullString `json:"tos_uri"`
	PolicyUri               sql.NullString `json:"policy_uri"`
	Contacts                []string       `json:"contacts"`
	Active                  sql.NullBool   `json:"active"`
	CreatedAt               sql.NullTime   `json:"created_at"`
	UpdatedAt               sql.NullTime   `json:"updated_at"`
}

type ClientScope struct {
	ClientID  uuid.UUID    `json:"client_id"`
	ScopeID   uuid.UUID    `json:"scope_id"`
	CreatedAt sql.NullTime `json:"created_at"`
}

type ConsentRecord struct {
	ID        uuid.UUID    `json:"id"`
	UserID    uuid.UUID    `json:"user_id"`
	ClientID  uuid.UUID    `json:"client_id"`
	Scopes    []string     `json:"scopes"`
	CreatedAt sql.NullTime `json:"created_at"`
	UpdatedAt sql.NullTime `json:"updated_at"`
}

type RefreshToken struct {
	ID        uuid.UUID    `json:"id"`
	Token     string       `json:"token"`
	ClientID  uuid.UUID    `json:"client_id"`
	UserID    uuid.UUID    `json:"user_id"`
	Scope     string       `json:"scope"`
	ExpiresAt time.Time    `json:"expires_at"`
	CreatedAt sql.NullTime `json:"created_at"`
}

type Scope struct {
	ID          uuid.UUID    `json:"id"`
	Scope       string       `json:"scope"`
	Description string       `json:"description"`
	IsDefault   sql.NullBool `json:"is_default"`
	CreatedAt   sql.NullTime `json:"created_at"`
}

type Session struct {
	ID        uuid.UUID      `json:"id"`
	UserID    uuid.UUID      `json:"user_id"`
	ClientID  uuid.NullUUID  `json:"client_id"`
	IpAddress sql.NullString `json:"ip_address"`
	UserAgent sql.NullString `json:"user_agent"`
	ExpiresAt time.Time      `json:"expires_at"`
	CreatedAt sql.NullTime   `json:"created_at"`
}

type User struct {
	ID            uuid.UUID      `json:"id"`
	Email         string         `json:"email"`
	PasswordHash  string         `json:"password_hash"`
	FullName      sql.NullString `json:"full_name"`
	DateOfBirth   sql.NullTime   `json:"date_of_birth"`
	EmailVerified sql.NullBool   `json:"email_verified"`
	Active        sql.NullBool   `json:"active"`
	Role          sql.NullString `json:"role"`
	CreatedAt     sql.NullTime   `json:"created_at"`
	UpdatedAt     sql.NullTime   `json:"updated_at"`
}
